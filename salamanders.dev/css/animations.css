.pulse-animation {
	border-radius: 50%;
	background: #ffe700;
}

.pulse-animation:hover {
  	animation: pulse 2.3s infinite;
}

a.gbounce-animation
{
  	-webkit-animation: gbounce 4s ease infinite;
  	animation: gbounce 4s ease infinite;
  	animation-delay: 0ms;
}


@keyframes jump {
	0% { transform: translateY(0px); }
	25% { transform: translateY(-25px); }
}


@keyframes pulse {
	0% {
		-moz-box-shadow: 0 0 0 0 rgba(255, 231, 0, 0.7);
		box-shadow: 0 0 0 0 rgba(255, 231, 0, 0.5);
	}
	70% {
		-moz-box-shadow: 0 0 0 35px rgba(255, 231, 0, 0);
		box-shadow: 0 0 0 35px rgba(255, 231, 0, 0);
	}
	100% {
		-moz-box-shadow: 0 0 0 0 rgba(255, 231, 0, 0);
		box-shadow: 0 0 0 0 rgba(255, 231, 0, 0);
	}
}

@keyframes gbounce { 
  0% { transform: translateY(0); }
  15% { transform: translateY(-50px); }
  25% {transform: translateY(0);}
  50% { transform: translateY(0); }
  100% { transform: translateY(0); }
}

/*animation element*/

.animation-element {
  opacity: 0;
  position: relative;
}

/*animation element sliding left*/

.animation-element.slide-left {
  opacity: 0;
  -moz-transition: all 500ms ease-out;
  -webkit-transition: all 500ms ease-out;
  -o-transition: all 500ms ease-out;
  transition: all 500ms ease-out;
  -moz-transform: translate3d(-100px, 0px, 0px);
  -webkit-transform: translate3d(-100px, 0px, 0px);
  -o-transform: translate(-100px, 0px);
  -ms-transform: translate(-100px, 0px);
  transform: translate3d(-100px, 0px, 0px);
}

.animation-element.slide-right {
  opacity: 0;
  -moz-transition: all 500ms ease-out;
  -webkit-transition: all 500ms ease-out;
  -o-transition: all 500ms ease-out;
  transition: all 500ms ease-out;
  -moz-transform: translate3d(100px, 0px, 0px);
  -webkit-transform: translate3d(100px, 0px, 0px);
  -o-transform: translate(100px, 0px);
  -ms-transform: translate(100px, 0px);
  transform: translate3d(100px, 0px, 0px);
}

.animation-element.slide-left.in-view, .animation-element.slide-right.in-view {
  opacity: 1;
  -moz-transform: translate3d(0px, 0px, 0px);
  -webkit-transform: translate3d(0px, 0px, 0px);
  -o-transform: translate(0px, 0px);
  -ms-transform: translate(0px, 0px);
  transform: translate3d(0px, 0px, 0px);
}